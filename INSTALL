Dit project is ontwikkeld met Django 1.3.1 en python 2.6.7.

=Zelf opzetten?=

Zet de volgende variabelen in je environment:
	PYTHONPATH=/path/to/repo/
Copy sitesettings.py.example naar sitesettings.py en pas de waarden aan.

Zodra je de database hebt ingesteld, moet je de database syncen; je krijgt
hier ook meteen de vraag of je een super-user wil aanmaken voor jezelf, doe
dat;
$ python manage.py syncdb
Zodra die user is aangemaakt moet je in de database nog bijwerken dat je
ook in portal_user staat, b.v. bij sqlite:
sqlite> .schema portal_user
CREATE TABLE "portal_user" (
    "user_ptr_id" integer NOT NULL PRIMARY KEY REFERENCES "auth_user" ("id"),
    "public_name" varchar(60) NOT NULL,
    "is_male" bool NOT NULL
);
sqlite> insert into portal_user (user_ptr_id, public_name, is_male)
   ...> values (1, "Jouw Volledige Naam", true);

Om de admin-interface (fatsoenlijk) werkend te krijgen (CSS, etc) moet je:
$ python manage.py collectstatic
doen.

Je kunt een testserver maken door in /liminfra/:
$ python manage.py runserver 0:8080
te doen. Dit start je testserver op poort 8080.

De productiesettings die ik nu gebruik in Apache (2.2) zijn:
	DocumentRoot "/path/to/repo/liminfra/"
	FastCGIExternalServer /path/to/repo/liminfra/liminfra.fcgi -host 127
.0.0.1:3303

	RewriteEngine On
	RewriteRule ^/media.*$ $0 [QSA,L,PT]
	RewriteRule ^/static.*$ $0 [QSA,L,PT]
	RewriteCond %{REQUEST_FILENAME} !-f
	RewriteRule ^/(.*)$ /liminfra.fcgi/$1 [QSA,L]

	<Directory />
		<Files liminfra.fcgi>
			Order deny,allow
			Allow from all
		</Files>
	</Directory>
	<Location /static/>
		Order deny,allow
		Allow from all
	</Location>
	<Location /media/>
		Order deny,allow
		Allow from all
	</Location>

en dan de FastCGI server starten met
$ python manage.py runfcgi host=127.0.0.1 port=3303 pidfile=/path/to/pidfile

-- Quis
